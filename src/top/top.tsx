import styles from './style.module.css'
import TextBox from '../components/TextBox/TextBox'
import { useState } from 'react'
import EventInput from '../components/EventInput/EventInput'
import Choices from '../components/Choices/Choices'

function TOP() {
    const [step, setStep] = useState(0)
    const [inputText, setInputText] = useState('')
    const [count, setCount] = useState(3)
    const [showReport, setShowReport] = useState(false)
    const [showDetail, setShowDetail] = useState(false)

    const handleClick = () => setStep(1)
    const handleTextClick = () => step === 1 && setStep(2)
    const handleConfirm = () => inputText.trim() !== '' && setStep(3)

    const handleChoiceClick = (text: string) => {
        if (text === '„ÇÇ„ÅÜÂ§ß‰∏àÂ§´„Åß„Åô') {
            setShowDetail(false)
            setShowReport(false)
        } else if (text === '‰ªä„Åæ„Åß„ÅÆ„É°„É¢') {
            alert('‰ªä„Åæ„Åß„ÅÆ„É°„É¢„ÇíË°®Á§∫Ôºà‰ªÆÔºâ')
        } else if (text === 'ÂõûÊï∞„Éá„Éº„Çø') {
            alert('ÂõûÊï∞„Éá„Éº„Çø„ÇíË°®Á§∫Ôºà‰ªÆÔºâ')
        }
    }

    const handleCompleteClick = () => {
        setStep(0)
        setInputText('')
        setShowReport(false)
        setShowDetail(false)
    }

    const handlePersonClick = () => {
        setShowReport(!showReport)
        setShowDetail(false)
    }

    const handleReportClick = () => {
        setShowDetail(true)
    }

    return (
        <>
            {/* üë§ ‰∫∫ */}
            <div className={styles.person} onClick={handlePersonClick}>
                <div className={styles.circle}></div>
                <div className={styles.triangle}></div>
            </div>

            <div className={styles.rectangle}>
                {showReport && (
                    <div className={styles.confirmSection}>
                        {showDetail && (
                            <div className={styles.choiceWrapper}>
                                <Choices
                                    choicesText={['‰ªä„Åæ„Åß„ÅÆ„É°„É¢', 'ÂõûÊï∞„Éá„Éº„Çø', '„ÇÇ„ÅÜÂ§ß‰∏àÂ§´„Åß„Åô']}
                                    onClick={handleChoiceClick}
                                />
                            </div>
                        )}
                        <div className={styles.textBoxWrapper}>
                            <TextBox
                                text={
                                    showDetail
                                        ? `„ÅÇ„Å™„Åü„ÅØ‰ªäÈÄ±„ÄÅ${inputText || 'ÔºàÊú™ÂÖ•ÂäõÔºâ'}„Çí${count}Âõû„Åä„Åì„Å™„ÅÑ„Åæ„Åó„ÅüÔºÅ\nË©≥„Åó„ÅèËÅû„Åç„Åæ„Åô„ÅãÔºü`
                                        : `„ÅÇ„Å™„Åü„ÅØ‰ªäÈÄ±„ÄÅ${inputText || 'ÔºàÊú™ÂÖ•ÂäõÔºâ'}„Çí${count}Âõû„Åä„Åì„Å™„ÅÑ„Åæ„Åó„ÅüÔºÅ`
                                }
                                onClick={handleReportClick}
                            />
                        </div>
                    </div>
                )}

                {step === 1 && (
                    <div className={styles.textBoxWrapper}>
                        <TextBox
                            text="‰ªäÊó•„ÇÑ„Å£„Åü„Åì„Å®„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºÅ"
                            onClick={handleTextClick}
                        />
                    </div>
                )}

                {step === 2 && (
                    <div className={styles.inputSection}>
                        <EventInput
                            value={inputText}
                            onChange={setInputText}
                            className={styles.movableInput}
                        />
                        <button className={styles.nextBtn} onClick={handleConfirm}>
                            ÂÖ•ÂäõÂÆå‰∫Ü
                        </button>
                    </div>
                )}

                {step === 3 && (
                    <div className={styles.confirmSection}>
                        <div className={styles.choiceWrapper}>
                            <Choices
                                choicesText={['„ÅØ„ÅÑ', '„ÅÑ„ÅÑ„Åà']}
                                onClick={(text) =>
                                    text === '„ÅØ„ÅÑ' ? setStep(4) : setStep(2)
                                }
                            />
                        </div>
                        <div className={styles.textBoxWrapper}>
                            <TextBox text="„Çà„Çç„Åó„ÅÑ„Åß„Åó„Çá„ÅÜ„ÅãÔºü" onClick={() => {}} />
                        </div>
                    </div>
                )}

                {step === 4 && (
                    <div className={styles.completeSection}>
                        <TextBox text="Âèó„Åë‰ªò„Åë„Åæ„Åó„ÅüÔºÅ" onClick={handleCompleteClick} />
                    </div>
                )}
            </div>

            {step === 0 && (
                <button className={styles.countBtn} type="button" onClick={handleClick}>
                    „Ç´„Ç¶„É≥„Éà„Åô„Çã
                </button>
            )}
        </>
    )
}

export default TOP
